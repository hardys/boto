#!/usr/bin/env python

# hack test script to prove connection to heat-api from boto

# NOTE : You need to create /etc/boto.cfg with content similar to this:
# [Credentials]
# aws_access_key_id = <key>
# aws_secret_access_key = <key>
#
# [Boto]
# debug = 1
# cfn_region_name = heat
# cfn_region_endpoint = 127.0.0.1


import sys

import boto.pyami.config
import boto
import re, os
import ConfigParser
import logging

def main():

    logging.basicConfig(format='%(levelname)s:%(message)s',\
        level=logging.DEBUG)
    logging.debug("Debug level logging enabled")

    logging.debug("boto config expected in /etc/boto.cfg, reading contents")
    logging.debug("config = %s " % boto.config.dump())

    # TODO : Implement CLI args which override the config-file options

    # Retrieve the credentials from the config file
    access_key_id = boto.config.get_value('Credentials', 'aws_access_key_id')
    secret_access_key = boto.config.get_value('Credentials', 'aws_secret_access_key')
    if ( access_key_id and secret_access_key):
        logging.debug("Got credentials id=%s secret=%s" % (access_key_id, secret_access_key))
    else:
        logging.error("Failed to get required credentials, please pass in /etc/boto.cfg")

    # TODO : Retrieve the host/port from the configfile and add arg to pass hostname down into boto

    cloudformation = boto.connect_cloudformation(aws_access_key_id=access_key_id, aws_secret_access_key=secret_access_key, debug=True, is_secure=False, port=8000, path="/v1")
    if cloudformation:
        logging.debug("Got CF connection object OK")
    else:
        logging.error("Error establishing connection!")
        sys.exit(1)

    for stack in cloudformation.list_stacks():
        print "%s" % stack

if __name__ == "__main__":
    main()
